package com.formHandling.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import com.formHandling.entities.Data;
import com.formHandling.services.UserService;

@Controller
public class MainController{
	private UserService userService;

	  public MainController(UserService userService) { 
	  super(); 
	  this.userService =userService;
	  }
	
	@GetMapping("/data")
	public String listUsers(Model model) {
		model.addAttribute("data", userService.getAllDatas());
		//System.out.println("Working fine!!");
		return "data";
	}
	@GetMapping("/userdata/new")
	public String registrationform(Model model) {
		Data d = new Data();
		model.addAttribute("d",d);
		return "registrationform";
		
	}
	@PostMapping("/userdata")
	public String saveData(@ModelAttribute("data") Data data) {
		userService.saveData(data);
		return "redirect:/userdata";
	}
	@GetMapping("/userdata/edit/{id}")
	public String editForm(@PathVariable int id,Model model) {
		model.addAttribute("data",userService.getDataById(id));
		return "editform";
	}
	@PostMapping("/userdata/{id}")
	public String updateData(@PathVariable int id,
			@ModelAttribute("data") Data data,
			Model model) {
		Data previousData=userService.getDataById(id);
		previousData.setId(id);
		previousData.setName(data.getName());
		previousData.setEmail(data.getEmail());
		previousData.setMobilenumber(data.getMobilenumber());
		previousData.setState(data.getState());
		previousData.setGender(data.getGender());
		previousData.setSkills(data.getSkills());
		userService.updateData(previousData);
		return "redirect:/userdata";
	}
}

/*
 * @Controller
 * 
 * public class MainController {
 * 
 * @Autowired private Repository repository;
 * 
 * @RequestMapping(value = "/form", method = RequestMethod.GET) public String
 * registrationform(Model model) { model.addAttribute("data", new Data());
 * return "form"; }
 * 
 * 
 * @PostMapping("/submit") public String checkInfo(@Valid Data object,
 * BindingResult bindingResult, Model model) {
 * 
 * if (bindingResult.hasErrors()) { return "form"; } Data data =
 * repository.save(object); model.addAttribute("object", data); return
 * "success"; } }
 */